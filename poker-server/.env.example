# Monad Poker Backend - Example .env
# Copy this file to `.env` and fill the required secrets. Do NOT commit `.env`.

# --- Required ---
# Backend signer. Prefer WALLET_PRIVATE_KEY; PRIVATE_KEY is also supported for compatibility.
WALLET_PRIVATE_KEY=
# PRIVATE_KEY=

# Optional override for the game identity used for leaderboard writes/reads (defaults to backend wallet EOA)
# If unset, the backend wallet address derived from WALLET_PRIVATE_KEY is used as the GAME_ADDRESS (msg.sender)
GAME_ADDRESS=

# Server-only secrets (never expose in frontend)
API_SECRET=
# Used by POST /api/update-player-data and /api/submit-hand-batch when their flags are enabled
HMAC_SECRET=

# Optional client API key for browser-limited endpoints (if used elsewhere)
NEXT_PUBLIC_CLIENT_API_SECRET=

# Monad Poker game contract used by the batch endpoint (submitHandResult)
# Required when ENABLE_BATCH_ENDPOINT=true
GAME_CONTRACT_ADDRESS=

# Allowed origins (comma-separated). Example: http://localhost:3000,https://monadpoker.xyz
NEXT_PUBLIC_APP_URL=http://localhost:3000

# Chain RPC
RPC_URL=https://testnet-rpc.monad.xyz

# --- Recommended ---
JSON_LIMIT=32kb
RATE_LIMIT_MAX=20
RATE_LIMIT_WINDOW_MS=60000
HMAC_MAX_SKEW_SECONDS=60
TRUST_PROXY=0

# Leaderboard (official universal Monad game id) read-only endpoint config
# Defaults to official testnet address below; override if needed
LEADERBOARD_CONTRACT_ADDRESS=0xceCBFF203C8B6044F52CE23D914A1bfD997541A4
# Optional: set to the block where your game was registered/first updated to speed up log queries
# Example: 123456n (no quotes). Leave empty to scan from genesis (may be slow).
LEADERBOARD_FROM_BLOCK=
# Cache TTL in ms for GET /api/leaderboard responses
# The leaderboard cache is used to reduce the load on the contract and improve performance.
# A higher value will reduce the number of requests to the contract, but may also increase the latency of updates.
LEADERBOARD_CACHE_TTL_MS=15000

# Concurrency for reading per-player data from contract (tune based on RPC limits)
LEADERBOARD_READ_CONCURRENCY=12

# Snapshot path storing knownPlayers and lastProcessedBlock (used by indexer and GET /api/leaderboard)
# Ensure the process can read/write this path. Directory will be created if missing.
LEADERBOARD_SNAPSHOT_PATH=./data/leaderboard.json

# Background indexer settings (incrementally scans PlayerDataUpdated events to learn players)
# Poll interval in ms and chunk size (#blocks per getLogs call)
LEADERBOARD_INDEX_POLL_INTERVAL_MS=30000
LEADERBOARD_INDEX_CHUNK_BLOCKS=10000

# Gate indexer (disable block-based scanning entirely by default)
# Set to true ONLY if you want to discover players via logs; not required for normal ops
LEADERBOARD_INDEXER_ENABLED=false

# Recent hands ring buffer size (persisted in snapshot)
RECENT_HANDS_SIZE=100

# Cache TTL for /api/leaderboard/search responses (ms)
SEARCH_CACHE_TTL_MS=15000

# --- Optional ---
# Enable secure write endpoint POST /api/update-player-data
# Set to true ONLY when you intend to submit writes from a trusted server using API_SECRET + HMAC_SECRET
ENABLE_UPDATE_ENDPOINT=false

# Enable secure batched hand submission endpoint POST /api/submit-hand-batch and its client proxy
# Defaults to true if unset
ENABLE_BATCH_ENDPOINT=true
